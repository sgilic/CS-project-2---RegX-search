Background: 
A regex matching algorithm is an algo A that takes a pattern R and a text T and finds all sub-strings of T that match the pattern R. One example of this is unix's grep.

for a given (continous) sub-string S of T we define the span of S as the indexes i,j such that S=T[i]...T[j].

Project outline:
The project is to take 2 state of the art regex matching algorithms and modify them so that their out put on on R and T are a list of the spans found by the Algorithm and the time it took the Alg to find the spans.

pick 2 algorithms from:

Agrep
Gnu Grep
NR-grep
RE2 (this is a google system that also has a regex matcher within it)

Each algorithm should have a folder with it's open source code and a list of your modifications.
Also, an executable that generates a Makfile of the new code.

example:
in.txt contains:
aaaabbaabbb
regular expretion:
b+

running the algorithm should look like:
>>>> Agrep b+ in.txt
bb, [4,5], 20
bbb, [8,10], 45
